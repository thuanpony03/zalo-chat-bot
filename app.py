# Main application entry point with Flask webhook
# Created: 2025-03-04 23:44:55
# Author: thuanpony03

from flask import Flask, request, jsonify
import os
import json
import hmac
import hashlib
from dotenv import load_dotenv
from services.zalo_api import ZaloAPI
from services.message_handler import message_handler

# N·∫°p bi·∫øn m√¥i tr∆∞·ªùng
load_dotenv()

app = Flask(__name__)
zalo_api = ZaloAPI()

@app.route('/')
def index():
    return "Thu·∫≠n Pony Travel - Zalo Chatbot is running!"

@app.route('/webhook', methods=['GET', 'POST'])
async def webhook():
    if request.method == 'GET':
        # X·ª≠ l√Ω y√™u c·∫ßu x√°c th·ª±c webhook t·ª´ Zalo
        return "Webhook is active!"
    
    if request.method == 'POST':
        # Nh·∫≠n d·ªØ li·ªáu t·ª´ Zalo
        data = request.json
        
        # X√°c th·ª±c webhook (n·∫øu c·∫ßn)
        mac = request.headers.get('X-ZaloOA-Signature')
        if mac and not zalo_api.verify_webhook(data, mac):
            return jsonify({"error": "Invalid signature"}), 401
        
        try:
            # X·ª≠ l√Ω c√°c s·ª± ki·ªán
            event_name = data.get('event_name')
            
            if event_name == 'user_send_text':
                # Ng∆∞·ªùi d√πng g·ª≠i tin nh·∫Øn vƒÉn b·∫£n
                user_id = data['sender']['id']
                message = data['message']['text']
                
                # X·ª≠ l√Ω tin nh·∫Øn
                response = await message_handler.process_message(user_id, message)
                
                # G·ª≠i ph·∫£n h·ªìi
                zalo_api.send_text_message(user_id, response)
                
                return jsonify({"status": "success"}), 200
                
            elif event_name == 'user_click_button':
                # Ng∆∞·ªùi d√πng nh·∫•p v√†o n√∫t
                user_id = data['sender']['id']
                button_id = data['message']['button_id']
                
                # X·ª≠ l√Ω s·ª± ki·ªán click button
                # TODO: Th√™m x·ª≠ l√Ω c√°c button kh√°c nhau
                
                return jsonify({"status": "success"}), 200
                
            elif event_name == 'user_follow':
                # Ng∆∞·ªùi d√πng follow OA
                user_id = data['follower']['id']
                
                # G·ª≠i tin nh·∫Øn ch√†o m·ª´ng
                welcome_message = "üëã Xin ch√†o! C·∫£m ∆°n b·∫°n ƒë√£ theo d√µi Thu·∫≠n Pony Travel.\n\n" + \
                                  "T√¥i l√† tr·ª£ l√Ω ·∫£o c·ªßa Thu·∫≠n Pony Travel, chuy√™n cung c·∫•p:\n" + \
                                  "üåè Tour du l·ªãch n∆∞·ªõc ngo√†i\n" + \
                                  "üõÇ D·ªãch v·ª• visa v√† h·ªô chi·∫øu\n" + \
                                  "‚úàÔ∏è ƒê·∫∑t v√© m√°y bay\n\n" + \
                                  "T√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n h√¥m nay?"
                
                zalo_api.send_text_message(user_id, welcome_message)
                
                return jsonify({"status": "success"}), 200
                
            elif event_name == 'user_send_image':
                # Ng∆∞·ªùi d√πng g·ª≠i h√¨nh ·∫£nh
                user_id = data['sender']['id']
                
                # G·ª≠i ph·∫£n h·ªìi
                response = "T√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c h√¨nh ·∫£nh c·ªßa b·∫°n. Tuy nhi√™n, t√¥i ch·ªâ c√≥ th·ªÉ x·ª≠ l√Ω tin nh·∫Øn vƒÉn b·∫£n. Vui l√≤ng g·ª≠i y√™u c·∫ßu b·∫±ng vƒÉn b·∫£n."
                zalo_api.send_text_message(user_id, response)
                
                return jsonify({"status": "success"}), 200
            
            return jsonify({"status": "unhandled_event"}), 200
            
        except Exception as e:
            print(f"Error processing webhook: {e}")
            return jsonify({"error": str(e)}), 500

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)